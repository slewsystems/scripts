@startuml
'
' This is the Slewsystems Standard Library for PlantUML.
'
' This file includes helpers for:
'  - adding consistently formatted titles, footers, and headers
'  - applying a consistent styling to all diagrams
'  - expanding PlantUML functionality for new diagram types
'    - ERD


' ===
' Document information helpers
' ===

!$today = %date("yyyy-MM-dd")
!$confidential = %true()
!$title = "[Untitled] (set $title)"
!$hide_meta = %false()
' !$revision_name = "1"
' !$author_name = "Your Name"
' !$company_name = "Where you work"

!procedure $add_std_header()
    !$header = ""
    !if (%variable_exists("$author_name"))
        !$header = $header + "Author: " + $author_name + "\n"
    !endif
    !if (%variable_exists("$revision_name"))
        !$header = $header + $title + " Rev. " + $revision_name + "\n"
    !endif

    !$header = $header + "Rendered on " + $today

    !if ($hide_meta == %false())
        header "$header"
    !endif
!endprocedure

!procedure $add_std_footer()
    !$footer = ""
    !if ($confidential == %true())
        skinparam FooterFontColor red
        !$footer = $footer + "Confidential"
    !endif
    !if (%variable_exists("$company_name"))
        !$footer = $footer + " - " + $company_name
    !endif

    !if ($hide_meta == %false())
        footer "\n$footer"
    !endif
!endprocedure

!procedure $add_std_title()
    !if ($hide_meta == %false())
        title "$title"
    !endif
!endprocedure

!procedure $add_std_info()
    $add_std_header()
    $add_std_footer()
    $add_std_title()
!endprocedure

' ===
' Styling/Layout Helpers
' ===

!procedure $use_word_wrap($width = 125)
    skinparam wrapWidth $width
    skinparam wrapMessageWidth $width
    skinparam maxMessageSize $width
!endprocedure

!procedure $use_horizontal_layout()
    left to right direction
!endprocedure

' ===
' Styling/Theming
' ===

!$theme = {
    "textFont": "Helvetica",
    "codeFont": "Menlo",
    "canvasBackgroundColor": "White",
    "headerBackgroundColor": "LightSteelBlue",
    "headerFontColor": "Black",
    "headerFontStyle": "Bold",
    "bodyBackgroundColor": "GhostWhite",
    "bodyFontColor": "DarkSlateGrey",
    "enum_headerBackgroundColor": "IndianRed",
    "enum_bodyBackgroundColor": "LightPink",
    "enum_borderColor": "DarkRed",
    "sequenceDivider_headerBackgroundColor": "Khaki",
    "sequenceDivider_borderColor": "Olive",
    "note_bodyBackgroundColor": "Khaki",
    "note_borderColor": "Olive",
    "borderColor": "DarkSlateGrey",
    "arrowColor": "Black"
}

!function $get_themed_value($key, $prefix="")
    ' TODO: add assert for key existence (once plantuml adds ability to check)
    ' TODO: fallback to unprefixed key value if no key exists with prefix

    !if %strlen($prefix) > 0
        !$prefixed_key = $prefix + "_" + $key
        !return $theme[$prefixed_key]
    !endif

    !return $theme[$key]
!endfunction

!procedure $apply_std_style()
    skinparam actorStyle awesome
    skinparam backgroundcolor $get_themed_value("canvasBackgroundColor")
    skinparam arrowColor $get_themed_value("arrowColor")
    skinparam shadowing false
    skinparam padding 2
    skinparam defaultFontName $get_themed_value("textFont")
    skinparam defaultMonospacedFontName $get_themed_value("codeFont")
    skinparam roundCorner 5

    skinparam Note {
        BackgroundColor $get_themed_value("bodyBackgroundColor", "note")
        BorderColor $get_themed_value("borderColor", "note")
        BorderThickness 1
        FontSize 9
    }

    skinparam Legend {
        BackgroundColor GhostWhite
        BorderThickness 1
        BorderColor LightGrey
    }

    skinparam Circle {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Interface {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Database {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Boundary {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Control {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Entity {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Collections {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Queue {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Artifact {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Agent {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Actor {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Usecase {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Node {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Folder {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Component {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Cloud {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Frame {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Card {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Rectangle {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Hexagon {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Storage {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Stack {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Person {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam File {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
    }

    skinparam Package {
        BorderColor $get_themed_value("borderColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        ' NOTE: cant set the title and description differently
        FontStyle Normal
    }
!endprocedure

' Diagram specific styles (should follow $apply_*_styles() naming convention)

!procedure $apply_activity_styles()
    ' should mimic state styling
    skinparam Activity {
        FontStyle Normal
        FontSize 12
        FontColor $get_themed_value("bodyFontColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")

        Diamond {
            FontStyle Bold
            FontSize 12
            FontColor $get_themed_value("headerFontColor")
            BackgroundColor $get_themed_value("headerBackgroundColor")
            BorderColor $get_themed_value("borderColor")
            BorderThickness 1
        }
    }

    skinparam Swimlane {
        ' TODO: add into theme json
        BorderColor SlateGray
        BorderThickness 3
    }
!endprocedure

!procedure $apply_sequence_styles()
    autonumber
    autoactivate on
    hide unlinked

    skinparam actorStyle stick
    skinparam style strictuml
    skinparam boxPadding 10

    skinparam Sequence {
        ArrowThickness 2

        Participant {
            BackgroundColor $get_themed_value("bodyBackgroundColor")
            BorderColor $get_themed_value("borderColor")
        }

        LifeLine {
            BorderColor $get_themed_value("headerBackgroundColor")
            BackgroundColor $get_themed_value("bodyBackgroundColor")
        }

        Box {
            ' TODO: use a lighter color, put into theme json
            BackgroundColor GhostWhite
            BorderColor $get_themed_value("borderColor")
        }

        Group {
            BackgroundColor $get_themed_value("headerBackgroundColor")
            BorderColor $get_themed_value("borderColor")
            BorderThickness 1
            BodyBackgroundColor Transparent
        }

        Reference {
            HeaderBackgroundColor $get_themed_value("headerBackgroundColor")
            BorderColor $get_themed_value("borderColor")
            BorderThickness 1
            BodyBackgroundColor Transparent
        }

        Divider {
            BackgroundColor $get_themed_value("headerBackgroundColor", "sequenceDivider")
            BorderColor $get_themed_value("borderColor", "sequenceDivider")
            BorderThickness 1
            FontStyle Bold
        }
    }
!endprocedure

!procedure $apply_state_styles()
    hide empty description
    skinparam arrowThickness 1

    skinparam State {
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        FontColor $get_themed_value("bodyFontColor")
        FontStyle $get_themed_value("headerFontStyle")
        FontSize 12
        AttributeFontSize 11
        AttributeFontColor $get_themed_value("bodyFontColor")
        BorderThickness 1

        ' TODO: add these into theme?
        BackgroundColor<<todo>> RoyalBlue
        BorderColor<<todo>> MediumBlue
        FontColor<<todo>> White
        AttributeFontColor<<todo>> White

        BackgroundColor<<inprogress>> Gold
        BorderColor<<inprogress>> GoldenRod
        AttributeFontColor<<inprogress>> Black

        BackgroundColor<<done>> ForestGreen
        BorderColor<<done>> DarkGreen
        FontColor<<done>> White
        AttributeFontColor<<done>> White
    }
!endprocedure

!procedure $apply_class_styles()
    skinparam packageStyle Frame
    skinparam arrowThickness 1

    skinparam Class {
        HeaderBackgroundColor $get_themed_value("headerBackgroundColor")
        BackgroundColor $get_themed_value("bodyBackgroundColor")
        BorderColor $get_themed_value("borderColor")
        FontSize 12
        FontStyle $get_themed_value("headerFontStyle")
        FontColor $get_themed_value("headerFontColor")

        AttributeFontSize 11
        AttributeFontColor $get_themed_value("bodyFontColor")
    }

    skinparam Stereotype {
        C {
            BackgroundColor $get_themed_value("bodyBackgroundColor")
            BorderColor $get_themed_value("borderColor")
        }
    }
!endprocedure

!procedure $apply_er_styles()
    ' https://github.com/plantuml/plantuml/pull/31
    hide circle
    hide empty members
    hide stereotype

    ' not sure why, but it seems entity uses the Class styles?
    skinparam Class {
        BorderColor<<table>> $get_themed_value("borderColor")
        HeaderBackgroundColor<<table>> $get_themed_value("headerBackgroundColor")
        FontStyle $get_themed_value("headerFontStyle")
        BackgroundColor<<table>> $get_themed_value("bodyBackgroundColor")

        AttributeFontName<<table>> $get_themed_value("codeFont")
        AttributeFontSize<<table>> 11
        AttributeFontColor<<table>> $get_themed_value("bodyFontColor")
    }

    skinparam Class {
        BorderColor<<enum>> $get_themed_value("borderColor", "enum")
        HeaderBackgroundColor<<enum>> $get_themed_value("headerBackgroundColor", "enum")
        BackgroundColor<<enum>> $get_themed_value("bodyBackgroundColor", "enum")

        AttributeFontName<<enum>> $get_themed_value("codeFont")
        AttributeFontSize<<enum>> 11
        AttributeFontColor<<enum>> $get_themed_value("bodyFontColor")
    }
!endprocedure

!procedure $apply_generic_styles()
    ' intentionally left blank
!endprocedure


' ===
' Slewsystems Library Macros/Procs
' ===

!procedure $setup_std_diagram_for($style_name)
    !$diagram_style_proc_name = "$apply_" + $style_name + "_styles"
    !assert %function_exists($diagram_style_proc_name) : "Could not apply styles for '" + $style_name + "'. Typo?"

    $apply_std_style()
    %invoke_procedure($diagram_style_proc_name)
    $add_std_info()
!endprocedure

!define PK_TYPE INTEGER(11)

!define table(name) entity name<<table>>
!define enum_mapping(name, type) enum name<type><<enum>>

!define has_one(from, to) from }--|| to
!define has_many(from, to) from }--{ to
!define column_pk(name = "id") # name: PK_TYPE
!define column_pk(name = "id", type) # name: type
!define column_fk(name) + name: PK_TYPE
!define column_fk(name, type) + name: type
!define column_non_nullable(name, type) * name: type
!define column_nullable(name, type) name: type
!define omitted_columns(name = "...") //name//

!definelong timestamps()
    column_non_nullable(created_at, DATETIME)
    column_non_nullable(updated_at, DATETIME)
!enddefinelong
@enduml
